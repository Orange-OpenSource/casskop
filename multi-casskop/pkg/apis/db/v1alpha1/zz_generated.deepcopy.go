// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1alpha1

import (
	dbv1alpha1 "github.com/Orange-OpenSource/casskop/pkg/apis/db/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCasskop) DeepCopyInto(out *MultiCasskop) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCasskop.
func (in *MultiCasskop) DeepCopy() *MultiCasskop {
	if in == nil {
		return nil
	}
	out := new(MultiCasskop)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiCasskop) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCasskopList) DeepCopyInto(out *MultiCasskopList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MultiCasskop, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCasskopList.
func (in *MultiCasskopList) DeepCopy() *MultiCasskopList {
	if in == nil {
		return nil
	}
	out := new(MultiCasskopList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MultiCasskopList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCasskopSpec) DeepCopyInto(out *MultiCasskopSpec) {
	*out = *in
	if in.DeleteCassandraCluster != nil {
		in, out := &in.DeleteCassandraCluster, &out.DeleteCassandraCluster
		*out = new(bool)
		**out = **in
	}
	in.Base.DeepCopyInto(&out.Base)
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = make(map[string]dbv1alpha1.CassandraCluster, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCasskopSpec.
func (in *MultiCasskopSpec) DeepCopy() *MultiCasskopSpec {
	if in == nil {
		return nil
	}
	out := new(MultiCasskopSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultiCasskopStatus) DeepCopyInto(out *MultiCasskopStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultiCasskopStatus.
func (in *MultiCasskopStatus) DeepCopy() *MultiCasskopStatus {
	if in == nil {
		return nil
	}
	out := new(MultiCasskopStatus)
	in.DeepCopyInto(out)
	return out
}
