apiVersion: db.orange.com/v1alpha1
kind: CassandraRestore
metadata:
  name: gcp-restore-1
spec:
  # Cluster is a refeference to the Cluster to which the Restore belongs.
  cluster:
    name: cassandra-bgl
  # Backup is a reference to the Backup object to be restored.
  backup:
    name: gcp-backup
  # ConcurrentConnection is the number of threads used for upload, there might be
  # at most so many uploading threads at any given time, when not set, it defaults to 10
  concurrentConnection: 15
  # directory of Cassandra, by default it is /var/lib/cassandra, in this path, one expects there is 'data' directory
#  cassandraDirectory:
  # NoDeleteTruncates is flag saying if we should not delete truncated SSTables
  #	after they are imported, as part of CLEANUP phase, defaults to false
  noDeleteTruncates: false
  # SchemaVersion is the version of schema we want to restore from, upon backup, a schema version is automatically appended to snapshot name
  # and its manifest is uploaded under that name. In case we have two snapshots having same name,
  # we might distinguish between them by this schema version. If schema version is not specified,
  # we expect that there will be one and only one backup taken with respective snapshot name.
  # This schema version has to match the version of a Cassandra node we are doing restore for
  # (hence, by proxy, when global request mode is used, all nodes have to be on exact same schema version).
#   schemaVersion:
  # ExactSchemaVersion is a flag saying if we indeed want a schema version of a running node match with schema version a snapshot is taken on.
  #	There might be cases when we want to restore a table for which its CQL schema has not changed
  #	but it has changed for other table / keyspace but a schema for that node has changed by doing that.
#   exactSchemaVersion:
  # strategy telling how we should go about restoration, please refer to details in backup and sidecar documentation
  # Enum={"HARDLINKS","IMPORT"}
  restorationStrategyType: HARDLINKS
  # name of Kubernetes secret from which credentials used for the communication to cloud storage providers are read,
  #	if not specified, secret name to be read will be automatically derived in form 'cassandra-backup-restore-secret-cluster-{name-of-cluster}'.
  #	These secrets are used only in case protocol in storageLocation is gcp, azure or s3.
#  secret:
  # database entities to restore, it might be either only keyspaces or only tables (from different keyspaces if needed),
  # e.g. 'k1,k2' if one wants to backup whole keyspaces and 'ks1.t1,ks2,t2' if one wants to restore tables.
  #	These formats can not be used together so 'k1,k2.t2' is invalid. If this field is empty, all keyspaces are restored.
#  entities: "k1,k2.t1"