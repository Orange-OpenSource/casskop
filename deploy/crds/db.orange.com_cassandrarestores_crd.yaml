apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: cassandrarestores.db.orange.com
spec:
  group: db.orange.com
  names:
    kind: CassandraRestore
    listKind: CassandraRestoreList
    plural: cassandrarestores
    singular: cassandrarestore
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: CassandraRestore is a Casskop Operator resource that represents
        the restoration of backup of a Cassandra cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CassandraRestoreSpec defines the specification for a restore
            of a Cassandra backup.
          properties:
            backup:
              description: Backup is a reference to the Backup object to be restored.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            cassandraDirectory:
              description: directory of Cassandra, by default it is /var/lib/cassandra,
                in this path, one expects there is 'data' directory
              type: string
            cluster:
              description: Cluster is a refeference to the Cluster to which the Restore
                belongs.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            concurrentConnection:
              description: ConcurrentConnection is the number of threads used for
                upload, there might be at most so many uploading threads at any given
                time, when not set, it defaults to 10
              format: int32
              type: integer
            coordinatorMember:
              description: CoordinatorMember is the Pod name of the Cluster member
                on which the Restore will be executed.
              type: string
            entities:
              description: database entities to restore, it might be either only keyspaces
                or only tables (from different keyspaces if needed), e.g. 'k1,k2'
                if one wants to backup whole keyspaces and 'ks1.t1,ks2,t2' if one
                wants to restore tables. These formats can not be used together so
                'k1,k2.t2' is invalid. If this field is empty, all keyspaces are restored.
              type: string
            exactSchemaVersion:
              description: ExactSchemaVersion is a flag saying if we indeed want a
                schema version of a running node match with schema version a snapshot
                is taken on. There might be cases when we want to restore a table
                for which its CQL schema has not changed but it has changed for other
                table / keyspace but a schema for that node has changed by doing that.
              type: boolean
            noDeleteTruncates:
              description: NoDeleteTruncates is flag saying if we should not delete
                truncated SSTables after they are imported, as part of CLEANUP phase,
                defaults to false
              type: boolean
            restorationStrategyType:
              description: strategy telling how we should go about restoration, please
                refer to details in backup and sidecar documentation
              enum:
              - HARDLINKS
              - IMPORT
              type: string
            schemaVersion:
              description: SchemaVersion is the version of schema we want to restore
                from, upon backup, a schema version is automatically appended to snapshot
                name and its manifest is uploaded under that name. In case we have
                two snapshots having same name, we might distinguish between them
                by this schema version. If schema version is not specified, we expect
                that there will be one and only one backup taken with respective snapshot
                name. This schema version has to match the version of a Cassandra
                node we are doing restore for (hence, by proxy, when global request
                mode is used, all nodes have to be on exact same schema version).
              type: string
            secret:
              description: name of Kubernetes secret from which credentials used for
                the communication to cloud storage providers are read, if not specified,
                secret name to be read will be automatically derived in form 'cassandra-backup-restore-secret-cluster-{name-of-cluster}'.
                These secrets are used only in case protocol in storageLocation is
                gcp, azure or s3.
              type: string
          required:
          - backup
          - cluster
          type: object
        status:
          description: CassandraRestoreStatus captures the current status of a Cassandra
            restore.
          properties:
            conditions:
              description: RestoreCondition describes the observed state of a Restore
                at a certain point.
              properties:
                failureCause:
                  properties:
                    localizedMessage:
                      type: string
                    message:
                      type: string
                    stackTrace:
                      items:
                        properties:
                          className:
                            type: string
                          fileName:
                            type: string
                          lineNumber:
                            type: string
                          methodName:
                            type: string
                          nativeMethod:
                            type: string
                        type: object
                      type: array
                  required:
                  - localizedMessage
                  - message
                  - stackTrace
                  type: object
                lastTransitionTime:
                  type: string
                type:
                  description: RestoreConditionType represents a valid condition of
                    a Restore.
                  type: string
              required:
              - type
              type: object
            id:
              description: unique identifier of an operation, a random id is assigned
                to each operation after a request is submitted, from caller's perspective,
                an id is sent back as a response to his request so he can further
                query state of that operation, referencing id, by operations/{id}
                endpoint
              type: string
            progress:
              description: Progress is a float from 0.0 to 1.0, 1.0 telling that operation
                is completed, either successfully or with errors
              type: string
            restorationPhase:
              type: string
            timeCompleted:
              description: TimeCompleted is the time at which the restore completed.
              type: string
            timeCreated:
              type: string
            timeStarted:
              description: TimeStarted is the time at which the restore was started.
              type: string
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
