(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{104:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a(3),r=a(7),l=(a(0),a(139)),b=["components"],c={id:"2_topology",title:"Topology",sidebar_label:"Topology"},o={unversionedId:"6_references/2_topology",id:"6_references/2_topology",isDocsHomePage:!1,title:"Topology",description:"Topology",source:"@site/docs/6_references/2_topology.md",slug:"/6_references/2_topology",permalink:"/casskop/docs/6_references/2_topology",editUrl:"https://github.com/Orange-OpenSource/casskop/edit/master/website/docs/6_references/2_topology.md",version:"current",sidebar_label:"Topology",sidebar:"docs",previous:{title:"Cassandra cluster",permalink:"/casskop/docs/6_references/1_cassandra_cluster"},next:{title:"Cassandra cluster Status",permalink:"/casskop/docs/6_references/3_cassandra_cluster_status"}},i=[{value:"Topology",id:"topology",children:[]},{value:"DC",id:"dc",children:[]},{value:"Rack",id:"rack",children:[]}],p={rightToc:i};function d(e){var t=e.components,a=Object(r.a)(e,b);return Object(l.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"topology"},"Topology"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Field"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"dc"),Object(l.b)("td",{parentName:"tr",align:null},"["," ","]",Object(l.b)("a",{parentName:"td",href:"#dc"},"DC")),Object(l.b)("td",{parentName:"tr",align:null},"List of DC defined in the CassandraCluster."),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"-")))),Object(l.b)("h2",{id:"dc"},"DC"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Field"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"name"),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"Name of the DC"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"dc1")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"labels"),Object(l.b)("td",{parentName:"tr",align:null},"map","[","string","]","string"),Object(l.b)("td",{parentName:"tr",align:null},"Labels used to target Kubernetes nodes"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"rack"),Object(l.b)("td",{parentName:"tr",align:null},"["," ","]",Object(l.b)("a",{parentName:"td",href:"#rack"},"Rack")),Object(l.b)("td",{parentName:"tr",align:null},"List of Racks defined in the Cassandra DC"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"config"),Object(l.b)("td",{parentName:"tr",align:null},"map"),Object(l.b)("td",{parentName:"tr",align:null},"Configuration used by the config builder to generated cassandra.yaml and other configuration files"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"nodesPerRacks"),Object(l.b)("td",{parentName:"tr",align:null},"int32"),Object(l.b)("td",{parentName:"tr",align:null},"Number of nodes to deploy for a Cassandra deployment in each Racks."),Object(l.b)("td",{parentName:"tr",align:null},"Optional, if not filled, used value define in ",Object(l.b)("a",{parentName:"td",href:"/casskop/docs/6_references/1_cassandra_cluster#cassandraclusterspec"},"CassandraClusterSpec")),Object(l.b)("td",{parentName:"tr",align:null},"1")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"dataCapacity"),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"Define the Capacity for Persistent Volume Claims in the local storage. ",Object(l.b)("a",{parentName:"td",href:"/casskop/docs/3_configuration_deployment/3_storage#configuration"},"Check documentation for more informations")),Object(l.b)("td",{parentName:"tr",align:null},"Optional, if not filled, used value define in ",Object(l.b)("a",{parentName:"td",href:"/casskop/docs/6_references/1_cassandra_cluster#cassandraclusterspec"},"CassandraClusterSpec")),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"dataStorageClass"),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"Define StorageClass for Persistent Volume Claims in the local storage. ",Object(l.b)("a",{parentName:"td",href:"/casskop/docs/3_configuration_deployment/3_storage#configuration"},"Check documentation for more informations")),Object(l.b)("td",{parentName:"tr",align:null},"Optional, if not filled, used value define in ",Object(l.b)("a",{parentName:"td",href:"/casskop/docs/6_references/1_cassandra_cluster#cassandraclusterspec"},"CassandraClusterSpec")),Object(l.b)("td",{parentName:"tr",align:null})))),Object(l.b)("h2",{id:"rack"},"Rack"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Field"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Description"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Default"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"name"),Object(l.b)("td",{parentName:"tr",align:null},"string"),Object(l.b)("td",{parentName:"tr",align:null},"Name of the Rack"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"rack1")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"labels"),Object(l.b)("td",{parentName:"tr",align:null},"map","[","string","]","string"),Object(l.b)("td",{parentName:"tr",align:null},"Labels used to target Kubernetes nodes"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null},"-")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"config"),Object(l.b)("td",{parentName:"tr",align:null},"map"),Object(l.b)("td",{parentName:"tr",align:null},"Configuration used by the config builder to generated cassandra.yaml and other configuration files"),Object(l.b)("td",{parentName:"tr",align:null},"No"),Object(l.b)("td",{parentName:"tr",align:null})),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"rollingRestart"),Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},"Flag to tell the operator to trigger a rolling restart of the Rack"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"false")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"rollingPartition"),Object(l.b)("td",{parentName:"tr",align:null},"int32"),Object(l.b)("td",{parentName:"tr",align:null},"The Partition to control the Statefulset Upgrade"),Object(l.b)("td",{parentName:"tr",align:null},"Yes"),Object(l.b)("td",{parentName:"tr",align:null},"0")))))}d.isMDXComponent=!0},139:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),p=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=p(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,m=d["".concat(b,".").concat(u)]||d[u]||s[u]||l;return a?r.a.createElement(m,c(c({ref:t},i),{},{components:a})):r.a.createElement(m,c({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=u;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var i=2;i<l;i++)b[i]=a[i];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);