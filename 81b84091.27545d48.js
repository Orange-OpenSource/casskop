(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{103:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return u}));var n=a(3),r=a(7),s=(a(0),a(139)),l=["components"],c={id:"4_multicasskop",title:"MultiCasskop",sidebar_label:"MultiCasskop"},i={unversionedId:"6_references/4_multicasskop",id:"6_references/4_multicasskop",isDocsHomePage:!1,title:"MultiCasskop",description:"MultiCasskop describes the desired state of the Cassandra cluster in a multi-site mode we want to setup through the operator.",source:"@site/docs/6_references/4_multicasskop.md",slug:"/6_references/4_multicasskop",permalink:"/casskop/docs/6_references/4_multicasskop",editUrl:"https://github.com/Orange-OpenSource/casskop/edit/master/website/docs/6_references/4_multicasskop.md",version:"current",sidebar_label:"MultiCasskop",sidebar:"docs",previous:{title:"Cassandra cluster Status",permalink:"/casskop/docs/6_references/3_cassandra_cluster_status"},next:{title:"Cassandra backup",permalink:"/casskop/docs/6_references/5_cassandra_backup"}},o=[{value:"MultiCasskop",id:"multicasskop",children:[]},{value:"MultiCasskopSpec",id:"multicasskopspec",children:[]},{value:"MultiCasskopStatus",id:"multicasskopstatus",children:[]}],b={rightToc:o};function u(e){var t=e.components,a=Object(r.a)(e,l);return Object(s.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"MultiCasskop")," describes the desired state of the Cassandra cluster in a multi-site mode we want to setup through the operator."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: db.orange.com/v2\nkind: MultiCasskop\nmetadata:\n name: multi-casskop-demo\nspec:\n deleteCassandraCluster: true\n base: #<-- Specify the base of our CassandraCluster\n   apiVersion: "db.orange.com/v2"\n   kind: "CassandraCluster"\n   metadata:\n     name: cassandra-demo\n     namespace: cassandra-demo\n     labels:\n       cluster: casskop\n   spec:\n     cassandraImage: orangeopensource/cassandra-image:3.11\n     bootstrapImage: orangeopensource/cassandra-bootstrap:0.1.4\n     configMapName: cassandra-configmap-v1\n     service:\n       annotations:\n         external-dns.alpha.kubernetes.io/hostname: casskop.external-dns-test.gcp.trycatchlearn.fr.\n     rollingPartition: 0\n     dataCapacity: "20Gi"\n     dataStorageClass: "standard-wait"\n     imagepullpolicy: IfNotPresent\n#      imagepullpolicy: Always\n     hardAntiAffinity: false\n     deletePVC: true\n     autoPilot: false\n     autoUpdateSeedList: false\n     debug: false\n     maxPodUnavailable: 1\n     nodesPerRacks: 1\n     runAsUser: 999\n     resources:\n       limits:\n         cpu: \'1\'\n         memory: 2Gi\n   status:\n     seedlist:   #<-- at this time the seedlist must be fullfilled manually with known predictive name of pods\n       - cassandra-demo-dc1-rack1-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc3-rack3-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc4-rack4-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc4-rack4-1.casskop.external-dns-test.gcp.trycatchlearn.fr\n override: #<-- Specify overrides of the CassandraCluster depending on the target kubernetes cluster\n   gke-master-west1-b:\n     spec:\n       topology:\n         dc:\n           - name: dc1\n             nodesPerRacks: 1\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack1\n                 rollingPartition: 0\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-b\n   gke-slave-west1-d:\n     spec:\n       imagepullpolicy: IfNotPresent\n       topology:\n         dc:\n           - name: dc3\n             nodesPerRacks: 1\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack3\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-d\n           - name: dc4\n             nodesPerRacks: 2\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack4\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-d\n')),Object(s.b)("h2",{id:"multicasskop"},"MultiCasskop"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Field"),Object(s.b)("th",{parentName:"tr",align:null},"Type"),Object(s.b)("th",{parentName:"tr",align:null},"Description"),Object(s.b)("th",{parentName:"tr",align:null},"Required"),Object(s.b)("th",{parentName:"tr",align:null},"Default"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"metadata"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#ObjectMeta"},"ObjectMetadata")),Object(s.b)("td",{parentName:"tr",align:null},"is metadata that all persisted resources must have, which includes all objects users must create."),Object(s.b)("td",{parentName:"tr",align:null},"No"),Object(s.b)("td",{parentName:"tr",align:null},"nil")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"spec"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"#multicasskopspec"},"MultiCasskopSpec")),Object(s.b)("td",{parentName:"tr",align:null},"defines the desired state of MultiCasskop."),Object(s.b)("td",{parentName:"tr",align:null},"No"),Object(s.b)("td",{parentName:"tr",align:null},"nil")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"status"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"#multicasskopstatus"},"MultiCasskopStatus")),Object(s.b)("td",{parentName:"tr",align:null},"defines the observed state of MultiCasskop."),Object(s.b)("td",{parentName:"tr",align:null},"No"),Object(s.b)("td",{parentName:"tr",align:null},"nil")))),Object(s.b)("h2",{id:"multicasskopspec"},"MultiCasskopSpec"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Field"),Object(s.b)("th",{parentName:"tr",align:null},"Type"),Object(s.b)("th",{parentName:"tr",align:null},"Description"),Object(s.b)("th",{parentName:"tr",align:null},"Required"),Object(s.b)("th",{parentName:"tr",align:null},"Default"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"deleteCassandraCluster"),Object(s.b)("td",{parentName:"tr",align:null},"bool"),Object(s.b)("td",{parentName:"tr",align:null},"If you have set to true, then when deleting the ",Object(s.b)("inlineCode",{parentName:"td"},"MultiCassKop")," object, it will cascade the deletion of the ",Object(s.b)("inlineCode",{parentName:"td"},"CassandraCluster")," object in the targeted k8s clusters. Then each local CassKop will delete their Cassandra clusters."),Object(s.b)("td",{parentName:"tr",align:null},"Yes"),Object(s.b)("td",{parentName:"tr",align:null},"true")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"base"),Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("a",{parentName:"td",href:"/casskop/docs/6_references/1_cassandra_cluster#cassandracluster"},"CassandraCluster")),Object(s.b)("td",{parentName:"tr",align:null},"Define for all ",Object(s.b)("inlineCode",{parentName:"td"},"CassandraCluster")," the default configuration"),Object(s.b)("td",{parentName:"tr",align:null},"Yes"),Object(s.b)("td",{parentName:"tr",align:null},"-")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"override"),Object(s.b)("td",{parentName:"tr",align:null},"map","[","string","]",Object(s.b)("a",{parentName:"td",href:"/casskop/docs/6_references/1_cassandra_cluster#cassandracluster"},"CassandraCluster")),Object(s.b)("td",{parentName:"tr",align:null},"Define for each ",Object(s.b)("inlineCode",{parentName:"td"},"CassandraCluster")," a specific configuration not shared across all of them"),Object(s.b)("td",{parentName:"tr",align:null},"Yes"),Object(s.b)("td",{parentName:"tr",align:null},"-")))),Object(s.b)("h2",{id:"multicasskopstatus"},"MultiCasskopStatus"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Field"),Object(s.b)("th",{parentName:"tr",align:null},"Type"),Object(s.b)("th",{parentName:"tr",align:null},"Description"),Object(s.b)("th",{parentName:"tr",align:null},"Required"),Object(s.b)("th",{parentName:"tr",align:null},"Default")))))}u.isMDXComponent=!0},139:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),b=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},u=function(e){var t=b(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),u=b(a),d=n,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||s;return a?r.a.createElement(m,c(c({ref:t},o),{},{components:a})):r.a.createElement(m,c({ref:t},o))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var o=2;o<s;o++)l[o]=a[o];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);