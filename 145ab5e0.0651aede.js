(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{131:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(1),o=a(9),i=(a(0),a(193)),r={id:"3_storage",title:"Storage",sidebar_label:"Storage"},s={id:"3_tasks/2_configuration_deployment/3_storage",title:"Storage",description:"## Configuration",source:"@site/docs/3_tasks/2_configuration_deployment/3_storage.md",permalink:"/casskop/docs/3_tasks/2_configuration_deployment/3_storage",editUrl:"https://github.com/Orange-OpenSource//casskop/edit/master/website/docs/3_tasks/2_configuration_deployment/3_storage.md",sidebar_label:"Storage",sidebar:"docs",previous:{title:"Cassandra Configuration",permalink:"/casskop/docs/3_tasks/2_configuration_deployment/2_cassandra_configuration"},next:{title:"Sidecars",permalink:"/casskop/docs/3_tasks/2_configuration_deployment/4_sidecars"}},c=[{value:"Configuration",id:"configuration",children:[]},{value:"Persistent volume claim",id:"persistent-volume-claim",children:[]},{value:"Additionnals storages configuration",id:"additionnals-storages-configuration",children:[]}],l={rightToc:c};function d(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"Cassandra is a stateful application. It needs to store data on disks. CassKop allows you to configure the type of\nstorage you want to use."),Object(i.b)("p",null,"Storage can be configured using the ",Object(i.b)("inlineCode",{parentName:"p"},"storage")," property in ",Object(i.b)("inlineCode",{parentName:"p"},"CassandraCluster.spec")," for global Data Centers configuration, or can be overrided at ",Object(i.b)("inlineCode",{parentName:"p"},"CassandraCluster.spec.topology.dc")," level. "),Object(i.b)("div",{className:"admonition admonition-important"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Once the Cassandra cluster is deployed, the storage cannot be changed."))),Object(i.b)("p",null,"Persistent storage uses Persistent Volume Claims to provision persistent volumes for storing data.\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"PersistentVolumes")," are acquired using a ",Object(i.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," which is managed by CassKop. The\n",Object(i.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," can use a ",Object(i.b)("inlineCode",{parentName:"p"},"StorageClass")," to trigger automatic volume provisioning."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"It is recommended to use local-storage with quick ssd disk access for low latency. We have only tested the\n",Object(i.b)("inlineCode",{parentName:"p"},"local-storage")," storage class within CassKop.")),Object(i.b)("p",null,"CassandraCluster fragment of persistent storage definition :"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),'...\n  # Global configuration\n  dataCapacity: "300Gi"\n  dataStorageClass: "local-storage"\n  deletePVC: true\n  ...\n  topology:\n     dc:\n       - name: dc1\n         # DC level configuration\n         dataCapacity: "10Gi"\n         dataStorageClass: "test-storage"\n         ...\n       - name: dc2\n         ...\n  ...\n...\n\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataCapacity"),' (required): Defines the size of the persistent volume claim, for example, "1000Gi".'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataStorageClass"),"(optional): Define the type of storage to use (or use\ndefault one). We recommand to use local-storage for better performances but\nit can be any storage with high ssd througput."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"deletePVC"),"(optional): Boolean value which specifies if the Persistent Volume Claim has to be deleted when the cluster\nis deleted. Default is ",Object(i.b)("inlineCode",{parentName:"li"},"false"),".")),Object(i.b)("p",null,"In this example, all statefulsets related to the ",Object(i.b)("inlineCode",{parentName:"p"},"dc2")," will have the default configuration for the ",Object(i.b)("inlineCode",{parentName:"p"},"data")," PV :"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataCapacity")," : 300Gi"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataStorageClass"),": local-storage")),Object(i.b)("p",null,"All statefulsets related to the ",Object(i.b)("inlineCode",{parentName:"p"},"dc1")," will have the specific configuration for the ",Object(i.b)("inlineCode",{parentName:"p"},"data")," PV :"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataCapacity")," : 10Gi"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dataStorageClass")," : test-storage")),Object(i.b)("div",{className:"admonition admonition-warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Resizing persistent storage for existing CassandraCluster is not currently supported. You must decide the\nnecessary storage size before deploying the cluster."))),Object(i.b)("p",null,"The above example asks that each node will have 300Gi of data volumes to persist the Cassandra data's using the\nlocal-storage storage class provider.\nThe parameter deletePVC is used to control if the data storage must persist when the according statefulset is deleted."),Object(i.b)("div",{className:"admonition admonition-warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If we don't specify dataCapacity, then CassKop will use the Docker Container ephemeral storage, and\nall data will be lost in case of a cassandra node reboot."))),Object(i.b)("h2",{id:"persistent-volume-claim"},"Persistent volume claim"),Object(i.b)("p",null,"When the persistent storage is used, it will create PersistentVolumeClaims with the following names:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"data-<cluster-name>-<dc-name>-<rack-name>-<idx>")),Object(i.b)("p",null,"Persistent Volume Claim for the volume used for storing data to the cluster ",Object(i.b)("inlineCode",{parentName:"p"},"<cluster-name>")," for the Cassandra DC\n",Object(i.b)("inlineCode",{parentName:"p"},"<dc-name>")," and the rack ",Object(i.b)("inlineCode",{parentName:"p"},"<rack-name>")," for the Pod with ID ",Object(i.b)("inlineCode",{parentName:"p"},"<idx>"),"."),Object(i.b)("div",{className:"admonition admonition-important"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("div",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"div"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Note that with local-storage the PVC object makes a link between the Pod and the Node. While this\nobject is existing the Pod will be sticked to the node chosen by the scheduler. In the case you want to move the\nCassandra node to a new kubernetes node, you will need at some point to manually delete the associate PVC so that the\nscheduler can choose another Node for scheduling. This is cover in the Operation document."))),Object(i.b)("h2",{id:"additionnals-storages-configuration"},"Additionnals storages configuration"),Object(i.b)("p",null,"For extra needed not covered by the defaults volumes managed through the CassandraCluster CR, we are allowing you to define your own storage configurations.\nTo do this, you will configure the ",Object(i.b)("inlineCode",{parentName:"p"},"storageConfigs")," property in ",Object(i.b)("inlineCode",{parentName:"p"},"CassandraCluster.Spec"),"."),Object(i.b)("p",null,"CassandraCluster fragment for dynamic persistent storage definition : "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'# ...\n     storageConfigs:\n        - mountPath: "/var/lib/cassandra/log"\n          name: "gc-logs"\n          pvcSpec:\n            accessModes:\n              - ReadWriteOnce\n            storageClassName: local-storage\n            resources:\n              requests:\n                storage: 5Gi\n        - mountPath: "/var/log/cassandra"\n          name: "cassandra-logs"\n          pvcSpec:\n            accessModes:\n              - ReadWriteOnce\n            storageClassName: local-storage\n            resources:\n              requests:\n                storage: 10Gi\n# ...\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"storageConfigs")," ",Object(i.b)("em",{parentName:"li"},"(required)")," : Defines the list of storage config object, which will instantiate ",Object(i.b)("inlineCode",{parentName:"li"},"Persitence Volume Claim")," and associate volume to pod of cassandra node.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"mountPath")," ",Object(i.b)("em",{parentName:"li"},"(required)")," : Defines the path into ",Object(i.b)("inlineCode",{parentName:"li"},"cassandra container")," where the volume will be mounted."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"name")," ",Object(i.b)("em",{parentName:"li"},"(required)")," : Used to define the ",Object(i.b)("inlineCode",{parentName:"li"},"PVC")," and ",Object(i.b)("inlineCode",{parentName:"li"},"VolumeMount")," names."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pvcSpec")," ",Object(i.b)("em",{parentName:"li"},"(required)")," : pvcSpec describes the PVC used for the mountPath described above it requires a kubernetes PVC spec.")))),Object(i.b)("p",null,"With the above configuration, the following configuration will be added to the ",Object(i.b)("inlineCode",{parentName:"p"},"rack statefulset")," definition : "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"# ...\n  volumeMounts:\n  #...\n  - mountPath: /var/lib/cassandra/log\n    name: gc-logs\n  - mountPath: /var/log/cassandra\n    name: cassandra-logs\n  #...\n# ...\n  volumeClaimTemplates:\n  #...\n  - metadata:\n      name: gc-logs\n      labels:\n        app: cassandracluster\n        cassandracluster: cassandra-demo\n        cassandraclusters.db.orange.com.dc: dcsts\n        cassandraclusters.db.orange.com.rack: rack1\n        cluster: casskop\n        dc-rack: dcsts-rack1\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      resources:\n        requests:\n          storage: 5Gi\n      storageClassName: local-storage\n      volumeMode: Filesystem\n  - metadata:\n      name: cassandra-logs\n      labels:\n        app: cassandracluster\n        cassandracluster: cassandra-demo\n        cassandraclusters.db.orange.com.dc: dcsts\n        cassandraclusters.db.orange.com.rack: rack1\n        cluster: casskop\n        dc-rack: dcsts-rack1\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      resources:\n        requests:\n          storage: 5Gi\n      storageClassName: local-storage\n      volumeMode: Filesystem\n  #...\n# ...\n")))}d.isMDXComponent=!0},193:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return u}));var n=a(0),o=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=o.a.createContext({}),d=function(e){var t=o.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},b=function(e){var t=d(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=d(a),m=n,u=b["".concat(r,".").concat(m)]||b[m]||p[m]||i;return a?o.a.createElement(u,s({ref:t},l,{components:a})):o.a.createElement(u,s({ref:t},l))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var l=2;l<i;l++)r[l]=a[l];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);