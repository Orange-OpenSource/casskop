(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{121:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),u=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,d=p["".concat(s,".").concat(m)]||p[m]||b[m]||c;return a?r.a.createElement(d,o(o({ref:t},i),{},{components:a})):r.a.createElement(d,o({ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,s=new Array(c);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var i=2;i<c;i++)s[i]=a[i];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},138:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/multicasskop_architecture-4ab1ea0d34c7b749dfd848259c6bab1c.jpeg"},73:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return u}));var n=a(2),r=a(6),c=(a(0),a(121)),s={id:"multicasskop_gke",title:"Multi-Casskop on Google Kubernetes Engine",author:"Alexandre Guitton",author_title:"Alexandre Guitton",author_url:"https://github.com/erdrix",author_image_url:"https://avatars0.githubusercontent.com/u/10503351?s=460&u=ea08d802388c79c17655c314296be58814391572&v=4",tags:["gke","casskop","cassandra","external-dns","multi-casskop"]},o={permalink:"/casskop/blog/2020/01/15/multicasskop_gke",editUrl:"https://github.com/Orange-OpenSource/casskop/edit/master/website/blog/blog/2020-01-15-multicasskop_gke.md",source:"@site/blog/2020-01-15-multicasskop_gke.md",description:"Pre-requisites",date:"2020-01-15T00:00:00.000Z",tags:[{label:"gke",permalink:"/casskop/blog/tags/gke"},{label:"casskop",permalink:"/casskop/blog/tags/casskop"},{label:"cassandra",permalink:"/casskop/blog/tags/cassandra"},{label:"external-dns",permalink:"/casskop/blog/tags/external-dns"},{label:"multi-casskop",permalink:"/casskop/blog/tags/multi-casskop"}],title:"Multi-Casskop on Google Kubernetes Engine",readingTime:5.69,truncated:!1,prevItem:{title:"Casskop 0.5.1 - Dynamic sidecars and storage configuration feature",permalink:"/casskop/blog/2020/03/26/dynamics_sidecars_storage"}},l=[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Setup GCP environment",id:"setup-gcp-environment",children:[{value:"Environment setup",id:"environment-setup",children:[]},{value:"Setup base infrastructure",id:"setup-base-infrastructure",children:[]},{value:"Check installation",id:"check-installation",children:[]}]},{value:"Multi casskop deployment",id:"multi-casskop-deployment",children:[{value:"Bootstrap API access to Slave from Master",id:"bootstrap-api-access-to-slave-from-master",children:[]},{value:"Install Multi-CassKop",id:"install-multi-casskop",children:[]},{value:"Create the MultiCasskop CRD",id:"create-the-multicasskop-crd",children:[]},{value:"Check multi cluster installation",id:"check-multi-cluster-installation",children:[]}]},{value:"Clean up everything",id:"clean-up-everything",children:[{value:"Cleaning slave cluster",id:"cleaning-slave-cluster",children:[]},{value:"Cleaning master cluster",id:"cleaning-master-cluster",children:[]}]}],i={rightToc:l};function u(e){var t=e.components,s=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},i,s,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"pre-requisites"},"Pre-requisites"),Object(c.b)("p",null,"User should need :"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://learn.hashicorp.com/terraform/getting-started/install.html"}),"terraform")," version v0.12.7+"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://kubernetes.io/fr/docs/tasks/tools/install-kubectl"}),"kubectl")," version v1.13.3+"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/ahmetb/kubectx"}),"kubectx")," & kubens"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://helm.sh/docs/intro/using_helm/"}),"Helm")," version v2.15.1+"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://cloud.google.com/sdk/install?hl=fr"}),"gcloud sdk")," version 272.0.0+"),Object(c.b)("li",{parentName:"ul"},"A service account with enough rights (for this example : ",Object(c.b)("inlineCode",{parentName:"li"},"editor"),")"),Object(c.b)("li",{parentName:"ul"},"Having a DNS zone in google cloud dns.")),Object(c.b)("h2",{id:"setup-gcp-environment"},"Setup GCP environment"),Object(c.b)("p",null,"To setup the GCP environment we will use terraform provisionning, to instantiate the following infrastructure :"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"2 GKE clusters :",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"First on europe-west1-b which will be the ",Object(c.b)("inlineCode",{parentName:"li"},"master")),Object(c.b)("li",{parentName:"ul"},"Second on europe-west1-c which will be the ",Object(c.b)("inlineCode",{parentName:"li"},"slave")))),Object(c.b)("li",{parentName:"ul"},"Firewall rules to allow clusters to communicate"),Object(c.b)("li",{parentName:"ul"},"External DNS on each cluster to expose cassandra nodes"),Object(c.b)("li",{parentName:"ul"},"Casskop operator on each cluster to focus on multi-casskop usage")),Object(c.b)("h3",{id:"environment-setup"},"Environment setup"),Object(c.b)("p",null,"Start to set variables needed for the instantiation : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ export CASSKOP_WORKSPACE=<path to cassandra-k8s-operateur project>\n$ export PROJECT=<gcp project>\n$ export SERVICE_ACCOUNT_KEY_PATH=<path to service account key>\n$ export NAMESPACE=cassandra-demo\n$ export DNS_ZONE_NAME=external-dns-test-gcp-trycatchlearn-fr     # -> change with your own one\n$ export DNS_NAME=external-dns-test.gcp.trycatchlearn.fr          # -> change with your own one\n$ export MANAGED_ZONE=tracking-pdb                                # -> change with your own one\n")),Object(c.b)("h3",{id:"setup-base-infrastructure"},"Setup base infrastructure"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ cd ${CASSKOP_WORKSPACE}/multi-casskop/samples/gke/terraform\n$ terraform init\n")),Object(c.b)("h4",{id:"master-provisionning"},"Master provisionning"),Object(c.b)("p",null,Object(c.b)("img",{alt:"MultiCasskop architecture",src:a(138).default})),Object(c.b)("p",null,"With the master provisionning, we will deploy firewall and Cloud dns configuration :"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ terraform workspace new master\n$ terraform workspace select master\n$ terraform apply \\\n    -var-file="env/master.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n')),Object(c.b)("h4",{id:"slave-provisionning"},"Slave provisionning"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ terraform workspace new slave\n$ terraform workspace select slave\n$ terraform apply \\\n    -var-file="env/slave.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n')),Object(c.b)("h3",{id:"check-installation"},"Check installation"),Object(c.b)("h4",{id:"check-master-configuration"},"Check master configuration"),Object(c.b)("p",null,"Now we will check that everything is well deployed in the GKE master cluster : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ gcloud container clusters get-credentials cassandra-europe-west1-b-master --zone europe-west1-b --project ${PROJECT}\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncasskop-cassandra-operator-54c4cfcbcb-b4qxq   1/1     Running   0          4h9m\nexternal-dns-6dd96c985-h76gh                  1/1     Running   0          4h16m\n")),Object(c.b)("h4",{id:"check-slave-configuration"},"Check slave configuration"),Object(c.b)("p",null,"Now we will check that everything is well deployed in the GKE slave cluster : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ gcloud container clusters get-credentials cassandra-europe-west1-c-slave --zone europe-west1-c --project ${PROJECT}\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncasskop-cassandra-operator-54c4cfcbcb-sxjz7   1/1     Running   0          4m56s\nexternal-dns-7f947c5b5b-mq7kg                 1/1     Running   0          5m46s\n")),Object(c.b)("h4",{id:"check-dns-zone-configuration"},"Check DNS zone configuration"),Object(c.b)("p",null,"Make a note of the nameservers that were assigned to your new zone : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ gcloud dns record-sets list \\\n    --zone "${DNS_ZONE_NAME}" \\\n    --name "${DNS_NAME}." \\\n    --type NS\nNAME                                     TYPE  TTL    DATA\nexternal-dns-test.gcp.trycatchlearn.fr.  NS    21600  ns-cloud-e1.googledomains.com.,ns-cloud-e2.googledomains.com.,ns-cloud-e3.googledomains.com.,ns-cloud-e4.googledomains.com.\n')),Object(c.b)("h4",{id:"check-firewall-configuration"},"Check Firewall configuration"),Object(c.b)("p",null,"@TODO : rework firewall source"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ gcloud compute firewall-rules describe gke-cassandra-cluster\nallowed:\n- IPProtocol: udp\n- IPProtocol: tcp\ncreationTimestamp: '2019-12-05T13:31:01.233-08:00'\ndescription: ''\ndirection: INGRESS\ndisabled: false\nid: '8270840333953452538'\nkind: compute#firewall\nlogConfig:\n  enable: false\nname: gke-cassandra-cluster\nnetwork: https://www.googleapis.com/compute/v1/projects/poc-rtc/global/networks/default\npriority: 1000\nselfLink: https://www.googleapis.com/compute/v1/projects/poc-rtc/global/firewalls/gke-cassandra-cluster\nsourceRanges:\n- 0.0.0.0/0\ntargetTags:\n- cassandra-cluster\n")),Object(c.b)("h4",{id:"check-storage-class"},"Check Storage Class"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ kubectl get storageclasses.storage.k8s.io \nNAME                 PROVISIONER            AGE\nstandard (default)   kubernetes.io/gce-pd   28m\nstandard-wait        kubernetes.io/gce-pd   24m\n")),Object(c.b)("h2",{id:"multi-casskop-deployment"},"Multi casskop deployment"),Object(c.b)("h3",{id:"bootstrap-api-access-to-slave-from-master"},"Bootstrap API access to Slave from Master"),Object(c.b)("p",null,"Multi-Casskop will be deployed in ",Object(c.b)("inlineCode",{parentName:"p"},"master cluster"),", change your ",Object(c.b)("inlineCode",{parentName:"p"},"kubectl")," context to point this cluster."),Object(c.b)("p",null,"In order to allow Multi-CassKop controller to have access to ",Object(c.b)("inlineCode",{parentName:"p"},"slave")," from ",Object(c.b)("inlineCode",{parentName:"p"},"master"),", we are going to use ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/admiraltyio/multicluster-service-account/releases/tag/v0.6.1"}),"kubemcsa")," from ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://admiralty.io/"}),"admiralty")," to be able to export secret from ",Object(c.b)("inlineCode",{parentName:"p"},"slave")," to ",Object(c.b)("inlineCode",{parentName:"p"},"master"),"."),Object(c.b)("p",null,"Install ",Object(c.b)("inlineCode",{parentName:"p"},"kubemcsa")," : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ export RELEASE_VERSION=v0.6.1\n$ wget https://github.com/admiraltyio/multicluster-service-account/releases/download/${RELEASE_VERSION}/kubemcsa-linux-amd64\n$ mkdir -p ~/tools/kubemcsa/${RELEASE_VERSION} && mv kubemcsa-linux-amd64 tools/kubemcsa/${RELEASE_VERSION}/kubemcsa\n$ chmod +x ~/tools/kubemcsa/${RELEASE_VERSION}/kubemcsa\n$ sudo ln -sfn  ~/tools/kubemcsa/${RELEASE_VERSION}/kubemcsa /usr/local/bin/kubemcsa\n")),Object(c.b)("p",null,"Generate secret for ",Object(c.b)("inlineCode",{parentName:"p"},"master")," : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubens # Switch context on correct namespace\nContext "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master" modified.\nActive namespace is "<Namespace>".\n$ kubemcsa export --context=gke_poc-rtc_europe-west1-c_cassandra-europe-west1-c-slave --namespace ${NAMESPACE} cassandra-operator --as gke-slave-west1-c | kubectl apply -f -\nsecret/gke-slave-west1-c created\n')),Object(c.b)("p",null,"Check that the secret is correctly created"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ kubectl get secrets -n ${NAMESPACE}\n...\ngke-slave-west1-c                Opaque                                5      28s\n")),Object(c.b)("h3",{id:"install-multi-casskop"},"Install Multi-CassKop"),Object(c.b)("p",null,"@TODO : To correct once the watch object will be fixed"),Object(c.b)("p",null,"Add MultiCasskop crd on the ",Object(c.b)("inlineCode",{parentName:"p"},"slave")," cluster : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ kubectx # Switch context on slave cluster\nSwitched to context "gke_<Project name>_europe-west1-c_cassandra-europe-west1-c-slave".\n$ kubectl apply -f https://raw.githubusercontent.com/Orange-OpenSource/casskop/master/multi-casskop/deploy/crds/multicluster_v1alpha1_cassandramulticluster_crd.yaml\n')),Object(c.b)("p",null,"Deployment with Helm : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ helm init --client-only\n$ helm repo add orange-incubator https://orange-kubernetes-charts-incubator.storage.googleapis.com\n$ helm repo update\n$ cd ${CASSKOP_WORKSPACE}\n$ helm install --name multi-casskop orange-incubator/multi-casskop --set k8s.local=gke-master-west1-b --set k8s.remote={gke-slave-west1-c} #--no-hooks if crd already install\n')),Object(c.b)("h3",{id:"create-the-multicasskop-crd"},"Create the MultiCasskop CRD"),Object(c.b)("p",null,"Now we are ready to deploy a MultiCassKop CRD instance.\nWe will use the example in ",Object(c.b)("inlineCode",{parentName:"p"},"multi-casskop/samples/gke/multi-casskop-gke.yaml")," :"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ kubectl apply -f multi-casskop/samples/gke/multi-casskop-gke.yaml\n")),Object(c.b)("h3",{id:"check-multi-cluster-installation"},"Check multi cluster installation"),Object(c.b)("p",null,"We can see that each cluster has the required pods : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc1-rack1-0                    1/1     Running   0          8m30s\ncasskop-cassandra-operator-54c4cfcbcb-8qncr   1/1     Running   0          34m\nexternal-dns-6dd96c985-7jf6w                  1/1     Running   0          35m\nmulti-casskop-67dc74dff7-z4642                1/1     Running   0          11m\n$ kubectx # Switch context on slave cluster\nSwitched to context "gke_<Project name>_europe-west1-c_cassandra-europe-west1-c-slave".\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc3-rack3-0                    1/1     Running   0          6m55s\ncassandra-demo-dc4-rack4-0                    1/1     Running   0          4m59s\ncassandra-demo-dc4-rack4-1                    1/1     Running   0          3m20s\ncasskop-cassandra-operator-54c4cfcbcb-sxjz7   1/1     Running   0          71m\nexternal-dns-7f947c5b5b-mq7kg                 1/1     Running   0          72m\n')),Object(c.b)("p",null,"If we go in one of the created pods, we can see that nodetool see pods of both clusters : "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubectl exec -ti cassandra-demo-dc1-rack1-0 nodetool status\nDatacenter: dc1\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.52.2.3  108.62 KiB  256          49.2%             a0958905-e1fa-4410-baca-fc86f4457f1a  rack1\nDatacenter: dc3\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.8.3.2   74.95 KiB  256          51.5%             03f8eede-4b69-43be-a0c1-73f73470398b  rack3\nDatacenter: dc4\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.8.4.3   107.87 KiB  256          47.8%             1a7432e2-4ca8-4767-acdb-3b40e6ff4a57  rack4\nUN  10.8.2.5   107.85 KiB  256          51.6%             272037ce-4146-42c1-9079-ef4561249254  rack4\n')),Object(c.b)("h2",{id:"clean-up-everything"},"Clean up everything"),Object(c.b)("p",null,"If you have set the ",Object(c.b)("inlineCode",{parentName:"p"},"deleteCassandraCluster")," to true, then when deleting the ",Object(c.b)("inlineCode",{parentName:"p"},"MultiCassKop")," object, it will cascade the deletion of the CassandraCluster object in the targeted k8s clusters. Then each local CassKop will delete their Cassandra clusters (else skip this step)"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"$ kubectl delete multicasskops.db.orange.com multi-casskop-demo\n$ helm del --purge multi-casskop\n")),Object(c.b)("h3",{id:"cleaning-slave-cluster"},"Cleaning slave cluster"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ cd ${CASSKOP_WORKSPACE}/multi-casskop/samples/gke/terraform\n$ terraform workspace select slave\n$ terraform destroy \\\n    -var-file="env/slave.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n')),Object(c.b)("h3",{id:"cleaning-master-cluster"},"Cleaning master cluster"),Object(c.b)("p",null,"Before running the following command, you need to clean dns records set."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),'$ terraform workspace select master\n$ terraform destroy \\\n    -var-file="env/master.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n')))}u.isMDXComponent=!0}}]);